) +
geom_hline(aes(yintercept = 0.11), size = 1.2)
View(walk_bike_by_home_geo)
static_column_chart(filter(walk_bike_by_home_geo, mode_class_condensed == "Bike/Micromobility" & survey_year == 2023),
x = "home_geography", y = "prop", fill = "home_geography",
ylabel = "% of Trips", xlabel = "Home Location", title = "Bike Trips by Home Geography - Share (2023)",
moe = "prop_moe") + theme(
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(size = 16),
axis.title.x = element_text(size = 16),
legend.text = element_text(size=14),
plot.title = element_text(size = 20)
) +
geom_hline(aes(yintercept = 0.011), size = 1.2)
View(walk_bike_by_rgc)
View(walk_bike_by_age)
View(walk_bike_by_income)
View(walk_bike_by_gender)
static_column_chart(filter(walk_bike_by_disability, mode_class_condensed == "Walk" & !(disability_person %in% c("Missing Response", "Prefer not to answer")) & survey_year == "2023"),
x = "disability_person", y = "prop", fill = "survey_year",
ylabel = "% of Trips", xlabel = "Disability Status", title = "Walk Trips by Disability Status - Share (2023)",
moe = "prop_moe") + theme(
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(size = 16),
axis.title.x = element_text(size = 16),
legend.text = element_text(size=14),
plot.title = element_text(size = 20)
)
shiny::runApp('C:/Users/GGibson/GitHub/PSRC/rtp-dashboard')
runApp('C:/Users/GGibson/GitHub/PSRC/rtp-dashboard')
runApp('C:/Users/GGibson/GitHub/PSRC/rtp-dashboard')
runApp('C:/Users/GGibson/GitHub/PSRC/rtp-dashboard')
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(data.table)
library(stringr)
library(travelSurveyTools)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(data.table)
library(stringr)
library(travelSurveyTools)
library(psrcelmer)
library(dplyr)
library(psrcplot)
library(tidyverse)
library(psrc.travelsurvey)
source("C:/Users/GGibson/GitHub/PSRC/travel-studies/2023/summary/survey-23-preprocess.R")
vars <- c("hhincome_detailed", "home_rgcname", "home_jurisdiction", "home_county",  # household
"age", "gender", "race_category", "disability_person", "share_2",         # person
"origin_purpose_cat", "dest_purpose_cat", "mode_class", "mode_class_5"    # trip
)
hts_data <- get_psrc_hts(survey_vars = vars)
hts_data$hh$survey_year <- as.character(hts_data$hh$survey_year)
hts_data$person$survey_year <- as.character(hts_data$person$survey_year)
hts_data$day$survey_year <- as.character(hts_data$day$survey_year)
hts_data$trip$survey_year <- as.character(hts_data$trip$survey_year)
hts_data$vehicle$survey_year <- as.character(hts_data$vehicle$survey_year)
# condense mode_class
#unique(hts_data$trip$mode_class)
# hts_data$trip <- hts_data$trip %>%
#   mutate(mode_class_condensed = case_when(mode_class %in% c("Drive HOV2", "Drive HOV3+", "Drive SOV") ~ "Drive",
#                                           mode_class %in% c("School Bus","Ride Hail") ~ "Other",
#                                           mode_class %in% c("Bike", "Micromobility") ~ "Bike/Micromobility",
#                                           TRUE ~ mode_class))
# condense hhincome
hts_data$hh <- hts_data$hh %>%
mutate(hhincome_detailed_combined = case_when(hhincome_detailed %in% c("Under $10,000", "$10,000-$24,999", "$25,000-$34,999", "$35,000-$49,999") ~ "Under $50,000",
hhincome_detailed %in% c("$50,000-$74,999", "$75,000-$99,999") ~ "$50,000-$99,999",
hhincome_detailed %in% c("$150,000-$199,999", "$200,000-$249,999", "$250,000 or more") ~ "$150,000 or more",
TRUE ~ hhincome_detailed)) %>%
mutate(hhincome_detailed_combined = factor(hhincome_detailed_combined,
levels = c("Under $50,000", "$50,000-$99,999", "$100,000-$149,999",
"$150,000 or more", "Prefer not to answer")))
# condense age
hts_data$person <- hts_data$person %>%
mutate(age_condensed = case_when(age %in% c("Under 5 years old", "5-11 years", "12-15 years", "16-17 years") ~ "Under 18 years old",
age %in% c("18-24 years", "25-34 years") ~ "18-34 years",
age %in% c("35-44 years", "45-54 years", "55-64 years") ~ "35-64 years",
age %in% c("65-74 years", "75-84 years", "85 years or older") ~ "65 years or older")) %>%
mutate(age_condensed = factor(age_condensed, levels = c("Under 18 years old", "18-34 years", "35-64 years", "65 years or older")))
# condense gender
hts_data$person <- hts_data$person %>%
mutate(gender_group = case_when(gender %in% c("Female", "Girl/Woman (cisgender or transgender)") ~ "Women",
gender %in% c("Male", "Boy/Man (cisgender or transgender)") ~ "Men",
gender %in% c("Non-Binary", "Non-binary/Something else fits better", "Another") ~ "Non-Binary/Other",
gender == "Not listed here / prefer not to answer" ~ "Prefer not to answer",
TRUE ~ gender)) %>%
mutate(gender_group = factor(gender_group, levels = c("Women", "Men", "Non-Binary/Other", "Prefer not to answer")))
# simplify race values
hts_data$person <- hts_data$person %>%
mutate(race_simple = case_when(race_category == "White non-Hispanic" ~ "White",
race_category == "AANHPI non-Hispanic" ~ "Asian American, Native Hawaiian, or Pacific Islander",
race_category == "Black or African American non-Hispanic" ~ "Black or African American",
race_category %in% c("Some Other Race non-Hispanic", "Two or More Races non-Hispanic") ~ "Some Other Race",
TRUE ~ race_category))
# create geographic variables
hts_data$hh <- hts_data$hh %>%
mutate(in_rgc = ifelse(home_rgcname == "Not RGC", "Home Not in RGC", "Home in RGC"))
hts_data$hh <- hts_data$hh %>%
mutate(home_geography = factor(case_when(home_jurisdiction == "Seattle" ~ home_jurisdiction,
home_county == "King County" & home_jurisdiction != "Seattle" ~ "Rest of King",
home_county %in% c("Kitsap County", "Pierce County", "Snohomish County") ~ home_county),
levels = c("Seattle", "Rest of King", "Kitsap County", "Pierce County", "Snohomish County")))
# ids <- c("hh_id", "person_id", "day_id", "trip_id")
# wts <- c("hh_weight", "person_weight", "day_weight", "trip_weight")
#
# trip_totals <- summarize_weighted(hts_data = hts_data,
#                                   summarize_var = "survey_year",
#                                   summarize_by = NULL,
#                                   id_cols = ids,
#                                   wt_cols = wts,
#                                   wtname = "trip_weight"
#                                   )
#
# trip_summary <- trip_totals$summary$wtd %>%
#   mutate(prop_moe = prop_se * 1.645,
#          est_rounded = est/1000000)
mode_summary <- psrc_hts_stat(hts_data,
analysis_unit = "trip",
group_vars = "mode_class_5")
trip_summary <- mode_summary %>%
group_by(survey_year) %>%
summarize(est = sum(est)) %>%
mutate(est_rounded = est/1000000)
hts_data$trip <- hts_data$trip %>%
mutate(origin_type = case_when(origin_purpose_cat == "Social/Recreation" ~ "Recreation",
origin_purpose_cat %in% c("Missing Response", "Not imputable") ~ NA_character_,
is.na(origin_purpose_cat) ~ NA_character_,
origin_purpose_cat %in% c("Home", "Overnight", "Change mode") ~ origin_purpose_cat,
TRUE ~ "Utility")) %>%
# mutate(trip_purpose_type = case_when(dest_purpose_cat == "Social/Recreation" ~ "Recreation Trips",
#                                      dest_purpose_cat %in% c("Home", "Overnight") & origin_type == "Recreation" ~ "Recreation Trips",
#                                      dest_purpose_cat %in% c("Home", "Overnight") & origin_type == "Utility" ~ "Utility Trips",
#                                      dest_purpose_cat %in% c("Missing Response", "Not imputable") ~ NA_character_,
#                                      dest_purpose_cat %in% c("Home", "Overnight") & origin_type %in% c("Home", "Overnight") ~ NA_character_,
#                                      is.na(dest_purpose_cat) ~ NA_character_,
#                                      TRUE ~ "Utility Trips"))
mutate(trip_purpose_type = case_when(
origin_type == "Recreation" & dest_purpose_cat == "Social/Recreation" ~ "Recreation Trips",
origin_type == "Utility" & dest_purpose_cat == "Social/Recreation" ~ "Recreation/Utility Mix",
origin_type %in% c("Home", "Overnight", "Change mode") & dest_purpose_cat == "Social/Recreation" ~ "Recreation Trips",
dest_purpose_cat %in% c("Home", "Overnight", "Change mode") & origin_type == "Recreation" ~ "Recreation Trips",
dest_purpose_cat %in% c("Home", "Overnight", "Change mode") & origin_type == "Utility" ~ "Utility Trips",
origin_type == "Recreation" & !(dest_purpose_cat %in% c("Home", "Overnight", "Change mode", "Social/Recreation")) ~ "Recreation/Utility Mix",
dest_purpose_cat %in% c("Missing Response", "Not imputable") ~ NA_character_,
dest_purpose_cat %in% c("Home", "Overnight", "Change mode") & origin_type %in% c("Home", "Overnight", "Change mode") ~ NA_character_,
is.na(dest_purpose_cat) ~ NA_character_,
TRUE ~ "Utility Trips"))
walk_bike_by_purpose <- psrc_hts_stat(hts_data,
analysis_unit = "trip",
group_vars = c("trip_purpose_type", "mode_class_5")) %>%
filter(mode_class_5 %in% c("Walk", "Bike/Micromobility"))
View(walk_bike_by_purpose)
all_trips_by_purpose <- psrc_hts_stat(hts_data,
analysis_unit = "trip",
group_vars = c("trip_purpose_type", "mode_class_5"))
View(all_trips_by_purpose)
all_trips_by_purpose2 <- psrc_hts_stat(hts_data,
analysis_unit = "trip",
group_vars = c("trip_purpose_type"))
View(all_trips_by_purpose2)
walk_bike_by_purpose <- psrc_hts_stat(hts_data,
analysis_unit = "trip",
group_vars = c("mode_class_5", "trip_purpose_type")) %>%
filter(mode_class_5 %in% c("Walk", "Bike/Micromobility"))
View(walk_bike_by_purpose)
static_column_chart(filter(walk_bike_by_purpose, mode_class_5 == "Walk"
#& trip_purpose_type %in% c("Recreation Trips", "Utility Trips")
),
x = "survey_year", y = "prop", fill = "trip_purpose_type",
ylabel = "% of Trips", xlabel = "Survey Year", title = "Walk Trips by Purpose - Share",
moe = "prop_moe") + theme(
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(size = 16),
axis.title.x = element_text(size = 16),
legend.text = element_text(size=14),
plot.title = element_text(size = 24)
)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(data.table)
library(stringr)
library(travelSurveyTools)
library(psrcelmer)
library(dplyr)
library(psrcplot)
library(tidyverse)
library(psrc.travelsurvey)
source("C:/Users/GGibson/GitHub/PSRC/travel-studies/2023/summary/survey-23-preprocess.R")
vars <- c("hhincome_detailed", "home_rgcname", "home_jurisdiction", "home_county",  # household
"age", "gender", "race_category", "disability_person", "share_2",         # person
"origin_purpose_cat", "dest_purpose_cat", "dest_purpose_cat_5", "mode_class", "mode_class_5"    # trip
)
hts_data <- get_psrc_hts(survey_vars = vars)
hts_data$hh$survey_year <- as.character(hts_data$hh$survey_year)
hts_data$person$survey_year <- as.character(hts_data$person$survey_year)
hts_data$day$survey_year <- as.character(hts_data$day$survey_year)
hts_data$trip$survey_year <- as.character(hts_data$trip$survey_year)
hts_data$vehicle$survey_year <- as.character(hts_data$vehicle$survey_year)
# condense mode_class
#unique(hts_data$trip$mode_class)
# hts_data$trip <- hts_data$trip %>%
#   mutate(mode_class_condensed = case_when(mode_class %in% c("Drive HOV2", "Drive HOV3+", "Drive SOV") ~ "Drive",
#                                           mode_class %in% c("School Bus","Ride Hail") ~ "Other",
#                                           mode_class %in% c("Bike", "Micromobility") ~ "Bike/Micromobility",
#                                           TRUE ~ mode_class))
# condense hhincome
hts_data$hh <- hts_data$hh %>%
mutate(hhincome_detailed_combined = case_when(hhincome_detailed %in% c("Under $10,000", "$10,000-$24,999", "$25,000-$34,999", "$35,000-$49,999") ~ "Under $50,000",
hhincome_detailed %in% c("$50,000-$74,999", "$75,000-$99,999") ~ "$50,000-$99,999",
hhincome_detailed %in% c("$150,000-$199,999", "$200,000-$249,999", "$250,000 or more") ~ "$150,000 or more",
TRUE ~ hhincome_detailed)) %>%
mutate(hhincome_detailed_combined = factor(hhincome_detailed_combined,
levels = c("Under $50,000", "$50,000-$99,999", "$100,000-$149,999",
"$150,000 or more", "Prefer not to answer")))
# condense age
hts_data$person <- hts_data$person %>%
mutate(age_condensed = case_when(age %in% c("Under 5 years old", "5-11 years", "12-15 years", "16-17 years") ~ "Under 18 years old",
age %in% c("18-24 years", "25-34 years") ~ "18-34 years",
age %in% c("35-44 years", "45-54 years", "55-64 years") ~ "35-64 years",
age %in% c("65-74 years", "75-84 years", "85 years or older") ~ "65 years or older")) %>%
mutate(age_condensed = factor(age_condensed, levels = c("Under 18 years old", "18-34 years", "35-64 years", "65 years or older")))
# condense gender
hts_data$person <- hts_data$person %>%
mutate(gender_group = case_when(gender %in% c("Female", "Girl/Woman (cisgender or transgender)") ~ "Women",
gender %in% c("Male", "Boy/Man (cisgender or transgender)") ~ "Men",
gender %in% c("Non-Binary", "Non-binary/Something else fits better", "Another") ~ "Non-Binary/Other",
gender == "Not listed here / prefer not to answer" ~ "Prefer not to answer",
TRUE ~ gender)) %>%
mutate(gender_group = factor(gender_group, levels = c("Women", "Men", "Non-Binary/Other", "Prefer not to answer")))
# simplify race values
hts_data$person <- hts_data$person %>%
mutate(race_simple = case_when(race_category == "White non-Hispanic" ~ "White",
race_category == "AANHPI non-Hispanic" ~ "Asian American, Native Hawaiian, or Pacific Islander",
race_category == "Black or African American non-Hispanic" ~ "Black or African American",
race_category %in% c("Some Other Race non-Hispanic", "Two or More Races non-Hispanic") ~ "Some Other Race",
TRUE ~ race_category))
# create geographic variables
hts_data$hh <- hts_data$hh %>%
mutate(in_rgc = ifelse(home_rgcname == "Not RGC", "Home Not in RGC", "Home in RGC"))
hts_data$hh <- hts_data$hh %>%
mutate(home_geography = factor(case_when(home_jurisdiction == "Seattle" ~ home_jurisdiction,
home_county == "King County" & home_jurisdiction != "Seattle" ~ "Rest of King",
home_county %in% c("Kitsap County", "Pierce County", "Snohomish County") ~ home_county),
levels = c("Seattle", "Rest of King", "Kitsap County", "Pierce County", "Snohomish County")))
# ids <- c("hh_id", "person_id", "day_id", "trip_id")
# wts <- c("hh_weight", "person_weight", "day_weight", "trip_weight")
#
# trip_totals <- summarize_weighted(hts_data = hts_data,
#                                   summarize_var = "survey_year",
#                                   summarize_by = NULL,
#                                   id_cols = ids,
#                                   wt_cols = wts,
#                                   wtname = "trip_weight"
#                                   )
#
# trip_summary <- trip_totals$summary$wtd %>%
#   mutate(prop_moe = prop_se * 1.645,
#          est_rounded = est/1000000)
mode_summary <- psrc_hts_stat(hts_data,
analysis_unit = "trip",
group_vars = "mode_class_5")
trip_summary <- mode_summary %>%
group_by(survey_year) %>%
summarize(est = sum(est)) %>%
mutate(est_rounded = est/1000000)
walk_bike_by_purpose <- psrc_hts_stat(hts_data,
analysis_unit = "trip",
group_vars = c("mode_class_5", "dest_purpose_cat_5")) %>%
filter(mode_class_5 %in% c("Walk", "Bike/Micromobility"))
View(walk_bike_by_purpose)
static_column_chart(filter(walk_bike_by_purpose, mode_class_5 == "Walk"
#& trip_purpose_type %in% c("Recreation Trips", "Utility Trips")
),
x = "survey_year", y = "prop", fill = "dest_purpose_cat_5",
ylabel = "% of Trips", xlabel = "Survey Year", title = "Walk Trips by Purpose - Share",
moe = "prop_moe") + theme(
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(size = 16),
axis.title.x = element_text(size = 16),
legend.text = element_text(size=14),
plot.title = element_text(size = 24)
)
static_column_chart(filter(walk_bike_by_purpose, mode_class_5 == "Walk"
& dest_purpose_cat_5 != "Home"
),
x = "survey_year", y = "prop", fill = "dest_purpose_cat_5",
ylabel = "% of Trips", xlabel = "Survey Year", title = "Walk Trips by Purpose - Share",
moe = "prop_moe") + theme(
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(size = 16),
axis.title.x = element_text(size = 16),
legend.text = element_text(size=14),
plot.title = element_text(size = 24)
)
walk_bike_by_purpose_nohome <- psrc_hts_stat(filter(hts_data, trip$dest_purpose_cat_5 != "Home"),
analysis_unit = "trip",
group_vars = c("mode_class_5", "dest_purpose_cat_5")) %>%
filter(mode_class_5 %in% c("Walk", "Bike/Micromobility"))
hts_data_nohome <- list(hts_data$hh,
hts_data$person,
hts_data$day,
filter(hts_data$trip, dest_purpose_cat_5 != "Home"),
hts_data$vehicle)
walk_bike_by_purpose_nohome <- psrc_hts_stat(hts_data_nohome,
analysis_unit = "trip",
group_vars = c("mode_class_5", "dest_purpose_cat_5")) %>%
filter(mode_class_5 %in% c("Walk", "Bike/Micromobility"))
hts_data_nohome <- list(hts_data$hh,      # doesn't work
hts_data$person,
hts_data$day,
filter(hts_data$trip, dest_purpose_cat_5 != "Home"),
hts_data$vehicle) %>%
rlang::set_names(c("hh","person","day","trip","vehicle"))
walk_bike_by_purpose_nohome <- psrc_hts_stat(hts_data_nohome,
analysis_unit = "trip",
group_vars = c("mode_class_5", "dest_purpose_cat_5")) %>%
filter(mode_class_5 %in% c("Walk", "Bike/Micromobility"))
View(walk_bike_by_purpose_nohome)
static_column_chart(filter(walk_bike_by_purpose, mode_class_5 == "Walk"
& dest_purpose_cat_5 != "Home"
),
x = "survey_year", y = "prop", fill = "dest_purpose_cat_5",
ylabel = "% of Trips", xlabel = "Survey Year", title = "Walk Trips by Purpose - Share",
moe = "prop_moe") + theme(
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(size = 16),
axis.title.x = element_text(size = 16),
legend.text = element_text(size=14),
plot.title = element_text(size = 24)
)
static_column_chart(filter(walk_bike_by_purpose_nohome, mode_class_5 == "Walk"
),
x = "survey_year", y = "prop", fill = "dest_purpose_cat_5",
ylabel = "% of Trips", xlabel = "Survey Year", title = "Walk Trips by Purpose (Alt) - Share",
moe = "prop_moe") + theme(
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(size = 16),
axis.title.x = element_text(size = 16),
legend.text = element_text(size=14),
plot.title = element_text(size = 24)
)
static_column_chart(filter(walk_bike_by_purpose, mode_class_5 == "Walk"
#& dest_purpose_cat_5 != "Home"
),
x = "survey_year", y = "prop", fill = "dest_purpose_cat_5",
ylabel = "% of Trips", xlabel = "Survey Year", title = "Walk Trips by Purpose - Share",
moe = "prop_moe") + theme(
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(size = 16),
axis.title.x = element_text(size = 16),
legend.text = element_text(size=14),
plot.title = element_text(size = 24)
)
unique(hts_data_nohome$trip$dest_purpose_cat_5)
hts_data_nohome$trip$dest_purpose_cat_5 <- ordered(hts_data_nohome$trip$dest_purpose_cat_5,
levels = c("Social/Recreation", "Errand/Shopping", "Work/School", "Other", "Missing Response"))
walk_bike_by_purpose_nohome <- psrc_hts_stat(hts_data_nohome,
analysis_unit = "trip",
group_vars = c("mode_class_5", "dest_purpose_cat_5")) %>%
filter(mode_class_5 %in% c("Walk", "Bike/Micromobility"))
static_column_chart(filter(walk_bike_by_purpose_nohome, mode_class_5 == "Walk"
& dest_purpose_cat_5 != "Missing Response"
),
x = "survey_year", y = "prop", fill = "dest_purpose_cat_5",
ylabel = "% of Trips", xlabel = "Survey Year", title = "Walk Trips by Purpose (Alt) - Share",
moe = "prop_moe") + theme(
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(size = 16),
axis.title.x = element_text(size = 16),
legend.text = element_text(size=14),
plot.title = element_text(size = 24)
)
static_column_chart(filter(walk_bike_by_purpose_nohome, mode_class_5 == "Walk"
& dest_purpose_cat_5 != "Missing Response"
),
x = "survey_year", y = "prop", fill = "dest_purpose_cat_5",
ylabel = "% of Trips", xlabel = "Survey Year", title = "Walk Trips by Purpose - Share",
source = "Trips to home locations are not included"
moe = "prop_moe") + theme(
static_column_chart(filter(walk_bike_by_purpose_nohome, mode_class_5 == "Walk"
& dest_purpose_cat_5 != "Missing Response"
),
x = "survey_year", y = "prop", fill = "dest_purpose_cat_5",
ylabel = "% of Trips", xlabel = "Survey Year", title = "Walk Trips by Purpose - Share",
source = "Trips to home locations are not included",
moe = "prop_moe") + theme(
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(size = 16),
axis.title.x = element_text(size = 16),
legend.text = element_text(size=14),
plot.title = element_text(size = 24)
)
static_column_chart(filter(walk_bike_by_purpose_nohome, mode_class_5 == "Bike/Micromobility"
& dest_purpose_cat_5 != "Missing Response"
),
x = "survey_year", y = "prop", fill = "trip_purpose_type",
ylabel = "% of Trips", xlabel = "Survey Year", title = "Bike Trips by Purpose - Share",
source = "Trips to home locations are not included",
moe = "prop_moe") + theme(
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(size = 16),
axis.title.x = element_text(size = 16),
legend.text = element_text(size=14),
plot.title = element_text(size = 24)
)
static_column_chart(filter(walk_bike_by_purpose_nohome, mode_class_5 == "Bike/Micromobility"
& dest_purpose_cat_5 != "Missing Response"
),
x = "survey_year", y = "prop", fill = "dest_purpose_cat_5",
ylabel = "% of Trips", xlabel = "Survey Year", title = "Bike Trips by Purpose - Share",
source = "Trips to home locations are not included",
moe = "prop_moe") + theme(
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(size = 16),
axis.title.x = element_text(size = 16),
legend.text = element_text(size=14),
plot.title = element_text(size = 24)
)
ssjl22 <- read.csv("J:/Projects/Employment/SSJL/SSJL25/ssjl_2022.csv")
unique(ssjl22$parent_id)
ssjl22_parents <- unique(ssjl22$parent_id)
write.table(ssjl22_parents, file = "J:/Projects/Employment/SSJL/SSJL25/ssjl25_parents.txt", sep = "\n", row.names = FALSE, col.names = FALSE)
ssjl22_parents <- sort(unique(ssjl22$parent_id))
write.table(ssjl22_parents, file = "J:/Projects/Employment/SSJL/SSJL25/ssjl25_parents.txt", sep = "\n", row.names = FALSE, col.names = FALSE)
rm(ssjl22, ssjl22_parents)
static_column_chart(filter(walk_bike_by_purpose_nohome, mode_class_5 == "Bike/Micromobility"
& dest_purpose_cat_5 != "Missing Response"
),
x = "survey_year", y = "prop", fill = "dest_purpose_cat_5",
ylabel = "% of Trips", xlabel = "Survey Year", title = "Bike Trips by Purpose - Share",
source = "Trips to home locations are not included",
moe = "prop_moe") + theme(
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(size = 16),
axis.title.x = element_text(size = 16),
legend.text = element_text(size=14),
plot.title = element_text(size = 24)
)
static_column_chart(filter(walk_bike_by_purpose_nohome, mode_class_5 == "Bike/Micromobility"
& dest_purpose_cat_5 != "Missing Response"
),
x = "survey_year", y = "prop", fill = "dest_purpose_cat_5",
ylabel = "% of Trips", xlabel = "Survey Year", title = "Bike Trips by Purpose - Share",
source = "Trips to home locations are not included",
moe = "prop_moe") + theme(
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(size = 16),
axis.title.x = element_text(size = 16),
legend.text = element_text(size=12),
plot.title = element_text(size = 24)
)
static_column_chart(filter(walk_bike_by_purpose_nohome, mode_class_5 == "Walk"
& dest_purpose_cat_5 != "Missing Response"
),
x = "survey_year", y = "prop", fill = "dest_purpose_cat_5",
ylabel = "% of Trips", xlabel = "Survey Year", title = "Walk Trips by Purpose - Share",
source = "Trips to home locations are not included",
moe = "prop_moe") + theme(
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(size = 16),
axis.title.x = element_text(size = 16),
legend.text = element_text(size=12),
plot.title = element_text(size = 24)
)
View(walk_bike_by_purpose_nohome)
table_query <- "SELECT * FROM park_and_ride.v_park_and_ride_dashboard"
park_ride_data <- psrcelmer::get_query(table_query) %>%
mutate(Year = as.factor(Year),
`Ownership Type` = factor(`Ownership Type`, levels = c("Permanent", "Leased")))
park_ride_data <- psrcelmer::get_query(table_query) |>
mutate(Year = as.factor(Year),
`Ownership Type` = factor(`Ownership Type`, levels = c("Permanent", "Leased")))
# Run this to pull the dashboard-specific data from Elmer to update the input data
library(dplyr)
park_ride_data <- psrcelmer::get_query(table_query) %>%
mutate(Year = as.factor(Year),
`Ownership Type` = factor(`Ownership Type`, levels = c("Permanent", "Leased")))
View(park_ride_data)
saveRDS(park_ride_data, file = "data_inputs/dashboard_data.rds")
file_loc <- "C:/Users/GGibson/GitHub/PSRC/park-ride/dasboard/"
saveRDS(park_ride_data, file = paste0(file_loc, "data_inputs/dashboard_data.rds"))
setwd("C:/Users/GGibson/GitHub/PSRC/park-ride/dasboard/")
# Run this to pull the dashboard-specific data from Elmer to update the input data
library(dplyr)
setwd("C:/Users/GGibson/GitHub/PSRC/park-ride/dasboard/")
table_query <- "SELECT * FROM park_and_ride.v_park_and_ride_dashboard"
file_loc <- "C:/Users/GGibson/GitHub/PSRC/park-ride/dashboard/"
park_ride_data <- psrcelmer::get_query(table_query) %>%
mutate(Year = as.factor(Year),
`Ownership Type` = factor(`Ownership Type`, levels = c("Permanent", "Leased")))
saveRDS(park_ride_data, file = paste0(file_loc, "data_inputs/dashboard_data.rds"))
shiny::runApp('C:/Users/GGibson/GitHub/PSRC/park-ride/dashboard')
getwd()
setwd("C:/Users/GGibson/GitHub/PSRC/park-ride/dashboard/")
library(rsconnect)
deployApp(account = "psrcwa",
appName = "park-ride-dashboard",
appTitle = "Park-and-Ride Trends Dashboard")
